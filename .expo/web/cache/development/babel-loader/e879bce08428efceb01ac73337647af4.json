{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/parmcoder/muic/git/firebase-react-native-101/src/screens/LoginScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport { signIn } from \"../services/auth.js\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _onLoginPressed = function _onLoginPressed() {\n    var emailError = emailValidator(email.value);\n    var passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail(_objectSpread(_objectSpread({}, email), {}, {\n        error: emailError\n      }));\n      setPassword(_objectSpread(_objectSpread({}, password), {}, {\n        error: passwordError\n      }));\n      return;\n    }\n\n    signIn(email.value, password.value).then(function (result) {\n      console.log(result);\n      navigation.navigate('Dashboard');\n    });\n    navigation.navigate('Dashboard');\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Welcome\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: _onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Login\"));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"sources":["/home/parmcoder/muic/git/firebase-react-native-101/src/screens/LoginScreen.tsx"],"names":["React","memo","useState","Background","Logo","Header","Button","TextInput","theme","emailValidator","passwordValidator","signIn","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","_onLoginPressed","emailError","passwordError","then","result","console","log","navigate","text","styles","StyleSheet","create","forgotPassword","width","alignItems","marginBottom","row","flexDirection","marginTop","label","color","colors","secondary","link","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport { theme } from '../core/theme';\nimport { emailValidator, passwordValidator } from '../core/utils';\nimport { Navigation } from '../types';\nimport {signIn} from '../services/auth.js';\n\ntype Props = {\n  navigation: Navigation;\n};\n\nconst LoginScreen = ({ navigation }: Props) => {\n  const [email, setEmail] = useState({ value: '', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n\n  const _onLoginPressed = () => {\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    }\n\n    signIn(email.value, password.value).then((result) => {\n      console.log(result)\n      navigation.navigate('Dashboard');\n    })\n    navigation.navigate('Dashboard');\n\n  };\n\n  return (\n    <Background>\n      <Logo />\n\n      <Header>Welcome</Header>\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n      />\n\n      <Button mode=\"contained\" onPress={_onLoginPressed}>\n        Login\n      </Button>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  label: {\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default memo(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}