{"ast":null,"code":"\"use strict\";\n\nvar _jsxFileName = \"/Users/supakrit/Desktop/firebase-react-native-101/node_modules/react-native-calculator/dist/Calculator.js\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar react_native_1 = require(\"react-native-web/dist/index\");\n\nvar Button_1 = require(\"./Button\");\n\nvar Display_1 = require(\"./Display\");\n\nvar interface_1 = require(\"./interface\");\n\nvar utils_1 = require(\"./utils\");\n\nvar ActionEnum;\n\n(function (ActionEnum) {\n  ActionEnum[ActionEnum[\"CLEAR\"] = 0] = \"CLEAR\";\n  ActionEnum[ActionEnum[\"DIVIDE\"] = 1] = \"DIVIDE\";\n  ActionEnum[ActionEnum[\"MULTIPLY\"] = 2] = \"MULTIPLY\";\n  ActionEnum[ActionEnum[\"BACK\"] = 3] = \"BACK\";\n  ActionEnum[ActionEnum[\"MINUS\"] = 4] = \"MINUS\";\n  ActionEnum[ActionEnum[\"PLUS\"] = 5] = \"PLUS\";\n  ActionEnum[ActionEnum[\"ENTER\"] = 6] = \"ENTER\";\n})(ActionEnum || (ActionEnum = {}));\n\nvar StackKindEnum;\n\n(function (StackKindEnum) {\n  StackKindEnum[StackKindEnum[\"NUMBER\"] = 0] = \"NUMBER\";\n  StackKindEnum[StackKindEnum[\"SIGN\"] = 1] = \"SIGN\";\n})(StackKindEnum || (StackKindEnum = {}));\n\nvar Calculator = function (_super) {\n  __extends(Calculator, _super);\n\n  function Calculator(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.calculated = false;\n    _this.stacks = [];\n    _this.calculate = _this.calculate.bind(_this);\n    _this.state = {\n      text: '',\n      done: false\n    };\n    return _this;\n  }\n\n  Calculator.prototype.getButtonSize = function (window) {\n    var _a = this.props,\n        keyboardHeight = _a.keyboardHeight,\n        hideDisplay = _a.hideDisplay;\n    var _b = this.props,\n        displayHeight = _b.displayHeight,\n        height = _b.height,\n        width = _b.width;\n\n    if (!height) {\n      height = window.height - window.y;\n    }\n\n    if (!width) {\n      width = window.width - window.x;\n    }\n\n    width = width / 4;\n    var containerHeight = height;\n\n    if (keyboardHeight) {\n      height = keyboardHeight / 5;\n    } else {\n      if (displayHeight || hideDisplay) {\n        height = (height - (displayHeight || 0)) / 5;\n      } else {\n        height = height / 6;\n      }\n    }\n\n    if (!displayHeight) {\n      displayHeight = hideDisplay ? 0 : keyboardHeight ? containerHeight - keyboardHeight : height;\n    }\n\n    return {\n      width: width,\n      height: height,\n      displayHeight: displayHeight\n    };\n  };\n\n  Calculator.prototype.componentDidMount = function () {\n    this.clear(this.props.value);\n  };\n\n  Calculator.prototype.render = function () {\n    var _this = this;\n\n    var style = this.props.style;\n    return React.createElement(react_native_1.View, {\n      style: style,\n      onLayout: function onLayout(e) {\n        var btnSize = _this.getButtonSize(e.nativeEvent.layout);\n\n        _this.setState({\n          btnSize: btnSize\n        }, function () {\n          if (_this.display) {\n            _this.display.tryNewSize(true);\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, this.renderMain());\n  };\n\n  Calculator.prototype.renderMain = function () {\n    var _this = this;\n\n    var _a = this.state,\n        text = _a.text,\n        btnSize = _a.btnSize;\n    var _b = this.props,\n        decimalSeparator = _b.decimalSeparator,\n        calcButtonBackgroundColor = _b.calcButtonBackgroundColor,\n        calcButtonColor = _b.calcButtonColor,\n        acceptButtonBackgroundColor = _b.acceptButtonBackgroundColor,\n        acceptButtonColor = _b.acceptButtonColor,\n        displayBackgroundColor = _b.displayBackgroundColor,\n        displayColor = _b.displayColor,\n        borderColor = _b.borderColor,\n        fontSize = _b.fontSize,\n        width = _b.width,\n        hasAcceptButton = _b.hasAcceptButton,\n        hideDisplay = _b.hideDisplay,\n        displayTextAlign = _b.displayTextAlign,\n        noDecimal = _b.noDecimal;\n    var done = this.state.done && hasAcceptButton;\n\n    if (!btnSize) {\n      return null;\n    }\n\n    return React.createElement(react_native_1.View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, !hideDisplay && React.createElement(react_native_1.View, {\n      style: [Styles.displayContainer, {\n        backgroundColor: displayBackgroundColor,\n        borderColor: borderColor,\n        width: width,\n        height: btnSize.displayHeight\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 27\n      }\n    }, React.createElement(Display_1.Display, {\n      height: btnSize.displayHeight,\n      width: btnSize.width * 4 - 20,\n      value: text,\n      ref: function ref(e) {\n        _this.display = e;\n      },\n      style: {\n        color: displayColor,\n        textAlign: displayTextAlign\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    })), React.createElement(react_native_1.View, {\n      style: [Styles.row, hideDisplay ? {\n        borderTopWidth: 1,\n        borderTopColor: borderColor\n      } : undefined],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, this.renderActionButton(btnSize, 'C', ActionEnum.CLEAR, true), this.renderActionButton(btnSize, '/', ActionEnum.DIVIDE), this.renderActionButton(btnSize, '*', ActionEnum.MULTIPLY), this.renderActionButton(btnSize, '❮', ActionEnum.BACK)), React.createElement(react_native_1.View, {\n      style: Styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, this.renderNumberButton(btnSize, '7', true), this.renderNumberButton(btnSize, '8'), this.renderNumberButton(btnSize, '9'), this.renderActionButton(btnSize, '-', ActionEnum.MINUS)), React.createElement(react_native_1.View, {\n      style: Styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, this.renderNumberButton(btnSize, '4', true), this.renderNumberButton(btnSize, '5'), this.renderNumberButton(btnSize, '6'), this.renderActionButton(btnSize, '+', ActionEnum.PLUS)), React.createElement(react_native_1.View, {\n      style: Styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }\n    }, React.createElement(react_native_1.View, {\n      style: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }\n    }, React.createElement(react_native_1.View, {\n      style: Styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, this.renderNumberButton(btnSize, '1', true), this.renderNumberButton(btnSize, '2'), this.renderNumberButton(btnSize, '3')), noDecimal ? React.createElement(react_native_1.View, {\n      style: Styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }\n    }, this.renderNumberButton(btnSize, '0', true), this.renderNumberButton(btnSize, '000', false, 2)) : React.createElement(react_native_1.View, {\n      style: Styles.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 42\n      }\n    }, this.renderNumberButton(btnSize, '0', true), this.renderNumberButton(btnSize, '000'), !noDecimal && this.renderNumberButton(btnSize, decimalSeparator))), React.createElement(Button_1.Button, {\n      style: [Styles.square, {\n        borderColor: borderColor,\n        height: btnSize.height * 2,\n        backgroundColor: done ? acceptButtonBackgroundColor : calcButtonBackgroundColor,\n        width: btnSize.width\n      }],\n      textStyle: {\n        color: done ? acceptButtonColor : calcButtonColor,\n        fontSize: fontSize * 2\n      },\n      text: done ? '↲' : '=',\n      onPress: this.calculate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  Calculator.prototype.renderNumberButton = function (btnSize, value, mostLeft, scaleX) {\n    var _this = this;\n\n    if (mostLeft === void 0) {\n      mostLeft = false;\n    }\n\n    if (scaleX === void 0) {\n      scaleX = 1;\n    }\n\n    var _a = this.props,\n        decimalSeparator = _a.decimalSeparator,\n        numericButtonBackgroundColor = _a.numericButtonBackgroundColor,\n        numericButtonColor = _a.numericButtonColor,\n        borderColor = _a.borderColor,\n        fontSize = _a.fontSize;\n    return React.createElement(Button_1.Button, {\n      style: [Styles.square, {\n        borderColor: borderColor,\n        backgroundColor: numericButtonBackgroundColor,\n        borderLeftWidth: mostLeft ? 1 : 0,\n        width: btnSize.width * scaleX,\n        height: btnSize.height\n      }],\n      textStyle: {\n        color: numericButtonColor,\n        fontSize: fontSize\n      },\n      text: value,\n      onPress: function onPress() {\n        if (_this.calculated) {\n          _this.calculated = false;\n          _this.stacks = [{\n            kind: StackKindEnum.NUMBER,\n            value: '',\n            text: '',\n            trailing: ''\n          }];\n        }\n\n        var stack = _this.stacks[_this.stacks.length - 1];\n\n        if (stack.kind === StackKindEnum.SIGN) {\n          stack = {\n            kind: StackKindEnum.NUMBER,\n            value: '',\n            text: '',\n            trailing: ''\n          };\n\n          _this.stacks.push(stack);\n        }\n\n        if (value === decimalSeparator) {\n          if (!stack.value && !stack.text) {\n            stack.text = '0';\n            stack.value = '0';\n          }\n\n          if (stack.value.indexOf(decimalSeparator) > -1 || stack.value === 'Infinity' || stack.value === '-Infinity') {\n            return;\n          }\n\n          stack.trailing = decimalSeparator;\n        } else if (value === '0' || value === '000') {\n          if (stack.value.indexOf(decimalSeparator) > -1 || stack.trailing !== '') {\n            stack.trailing = stack.trailing + value;\n            value = '';\n          }\n        } else {\n          if (stack.trailing) {\n            value = stack.trailing + value;\n            stack.trailing = '';\n          }\n        }\n\n        var val = parseFloat((stack.value + value).replace(decimalSeparator, '.'));\n        stack.value = val.toString();\n        stack.text = _this.format(val);\n\n        _this.setText();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    });\n  };\n\n  Calculator.prototype.renderActionButton = function (btnSize, value, action, mostLeft) {\n    var _this = this;\n\n    if (mostLeft === void 0) {\n      mostLeft = false;\n    }\n\n    var _a = this.props,\n        actionButtonBackgroundColor = _a.actionButtonBackgroundColor,\n        actionButtonColor = _a.actionButtonColor,\n        borderColor = _a.borderColor,\n        fontSize = _a.fontSize;\n    return React.createElement(Button_1.Button, {\n      style: [Styles.square, {\n        borderColor: borderColor,\n        backgroundColor: actionButtonBackgroundColor,\n        borderLeftWidth: mostLeft ? 1 : 0,\n        width: btnSize.width,\n        height: btnSize.height\n      }],\n      textStyle: {\n        color: actionButtonColor,\n        fontSize: fontSize\n      },\n      text: value,\n      onPress: function onPress() {\n        if (_this.calculated) {\n          _this.calculated = false;\n        }\n\n        switch (action) {\n          case ActionEnum.CLEAR:\n            _this.clear();\n\n            break;\n\n          case ActionEnum.PLUS:\n            _this.setSign('+');\n\n            break;\n\n          case ActionEnum.MINUS:\n            _this.setSign('-');\n\n            break;\n\n          case ActionEnum.MULTIPLY:\n            _this.setSign('*');\n\n            break;\n\n          case ActionEnum.DIVIDE:\n            _this.setSign('/');\n\n            break;\n\n          case ActionEnum.BACK:\n            if (!_this.stacks.length) {\n              _this.clear();\n            } else {\n              var stack = _this.stacks[_this.stacks.length - 1];\n\n              if (stack.kind === StackKindEnum.SIGN) {\n                _this.popStack();\n              } else {\n                var value_1 = stack.value,\n                    trailing = stack.trailing;\n                var decimalSeparator = _this.props.decimalSeparator;\n\n                if (!value_1 || value_1.length === 2 && value_1.startsWith('-') || value_1 === '-' || value_1 === 'Infinity' || value_1 === '-Infinity') {\n                  _this.clear();\n\n                  return;\n                }\n\n                if (value_1 === '0' && !trailing) {\n                  return;\n                }\n\n                if (trailing !== '') {\n                  stack.trailing = trailing.slice(0, trailing.length - 1);\n                } else {\n                  if (value_1.length <= 1) {\n                    _this.popStack();\n                  } else {\n                    value_1 = value_1.slice(0, value_1.length - 1);\n\n                    while (value_1.slice(-1) === '0') {\n                      value_1 = value_1.slice(0, value_1.length - 1);\n                      trailing = trailing + '0';\n                    }\n\n                    var sep = '';\n\n                    if (value_1[value_1.length - 1] === '.') {\n                      sep = _this.props.decimalSeparator;\n                    } else {\n                      value_1 += trailing;\n                      trailing = '';\n                    }\n\n                    var val = parseFloat(value_1.replace(decimalSeparator, '.'));\n                    stack.value = val.toString();\n                    stack.text = _this.format(val);\n                    stack.trailing = sep + trailing;\n                  }\n                }\n              }\n            }\n\n            _this.setText();\n\n            break;\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }\n    });\n  };\n\n  Calculator.prototype.calculate = function () {\n    var _this = this;\n\n    var _a = this.props,\n        onCalc = _a.onCalc,\n        onAccept = _a.onAccept,\n        hasAcceptButton = _a.hasAcceptButton,\n        _b = _a.roundTo,\n        roundTo = _b === void 0 ? 2 : _b;\n\n    if (!this.stacks.length) {\n      this.clear();\n      return;\n    }\n\n    var stack = this.stacks[this.stacks.length - 1];\n\n    if (stack.kind === StackKindEnum.SIGN) {\n      this.popStack();\n    } else if (this.stacks.length === 1 && stack.value === '-') {\n      this.clear();\n      return;\n    }\n\n    var num = eval(this.stacks.map(function (x) {\n      return x.value;\n    }).join('') || '0');\n    var value = Math.round(num * Math.pow(10, roundTo)) / Math.pow(10, roundTo);\n    var text = this.format(value);\n    this.stacks = [{\n      kind: StackKindEnum.NUMBER,\n      value: value.toString(),\n      text: text,\n      trailing: ''\n    }];\n    this.setText(true, function () {\n      if (onCalc) {\n        onCalc(value, text);\n      }\n\n      if (hasAcceptButton && onAccept && _this.state.done) {\n        onAccept(value, text);\n      }\n\n      _this.calculated = true;\n    });\n  };\n\n  Calculator.prototype.popStack = function () {\n    this.stacks.pop();\n\n    if (!this.stacks.length) {\n      this.clear();\n    }\n  };\n\n  Calculator.prototype.clear = function (value) {\n    if (value === void 0) {\n      value = 0;\n    }\n\n    this.stacks = [{\n      kind: StackKindEnum.NUMBER,\n      value: value.toString(),\n      text: this.format(value),\n      trailing: ''\n    }];\n    this.setText();\n  };\n\n  Calculator.prototype.setSign = function (sign) {\n    var stack = this.stacks[this.stacks.length - 1];\n\n    if (stack.kind === StackKindEnum.SIGN) {\n      if (this.stacks.length <= 1 && sign !== '-') {\n        return;\n      }\n\n      stack.text = sign;\n      stack.value = sign;\n    } else {\n      if (!stack.value || stack.value === 'Infinity' || stack.value === '-Infinity') {\n        return;\n      }\n\n      if (sign === '-' && this.stacks.length === 1 && stack.value === '0') {\n        stack.kind = StackKindEnum.SIGN;\n        stack.text = sign;\n        stack.value = sign;\n      } else {\n        this.stacks.push({\n          kind: StackKindEnum.SIGN,\n          text: sign,\n          value: sign,\n          trailing: ''\n        });\n      }\n    }\n\n    this.setText();\n  };\n\n  Calculator.prototype.setText = function (done, callback) {\n    var _this = this;\n\n    if (done === void 0) {\n      done = false;\n    }\n\n    var text = this.stacks.map(function (s) {\n      return s.text + (s.trailing || '');\n    }).join(' ');\n\n    if (!done) {\n      done = this.stacks.length === 1;\n    }\n\n    this.setState({\n      text: text,\n      done: done\n    }, function () {\n      var onTextChange = _this.props.onTextChange;\n\n      if (onTextChange) {\n        onTextChange(text);\n      }\n\n      if (callback) {\n        callback();\n      }\n    });\n  };\n\n  Calculator.prototype.format = function (num) {\n    var _a = this.props,\n        decimalSeparator = _a.decimalSeparator,\n        thousandSeparator = _a.thousandSeparator;\n    return utils_1.formatNumber(num, decimalSeparator, thousandSeparator);\n  };\n\n  Calculator.defaultProps = interface_1.DefaultCommonProps;\n  return Calculator;\n}(React.Component);\n\nexports.Calculator = Calculator;\nvar Styles = react_native_1.StyleSheet.create({\n  displayContainer: {\n    borderStyle: 'solid',\n    borderWidth: 1,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 0,\n    paddingTop: 0,\n    margin: 0\n  },\n  row: {\n    flexDirection: 'row',\n    alignContent: 'stretch',\n    flexWrap: 'wrap'\n  },\n  square: {\n    borderStyle: 'solid',\n    borderRightWidth: 1,\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["../src/Calculator.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar react_native_1 = require(\"react-native\");\r\nvar Button_1 = require(\"./Button\");\r\nvar Display_1 = require(\"./Display\");\r\nvar interface_1 = require(\"./interface\");\r\nvar utils_1 = require(\"./utils\");\r\nvar ActionEnum;\r\n(function (ActionEnum) {\r\n    ActionEnum[ActionEnum[\"CLEAR\"] = 0] = \"CLEAR\";\r\n    ActionEnum[ActionEnum[\"DIVIDE\"] = 1] = \"DIVIDE\";\r\n    ActionEnum[ActionEnum[\"MULTIPLY\"] = 2] = \"MULTIPLY\";\r\n    ActionEnum[ActionEnum[\"BACK\"] = 3] = \"BACK\";\r\n    ActionEnum[ActionEnum[\"MINUS\"] = 4] = \"MINUS\";\r\n    ActionEnum[ActionEnum[\"PLUS\"] = 5] = \"PLUS\";\r\n    ActionEnum[ActionEnum[\"ENTER\"] = 6] = \"ENTER\";\r\n})(ActionEnum || (ActionEnum = {}));\r\nvar StackKindEnum;\r\n(function (StackKindEnum) {\r\n    StackKindEnum[StackKindEnum[\"NUMBER\"] = 0] = \"NUMBER\";\r\n    StackKindEnum[StackKindEnum[\"SIGN\"] = 1] = \"SIGN\";\r\n})(StackKindEnum || (StackKindEnum = {}));\r\nvar Calculator = /** @class */ (function (_super) {\r\n    __extends(Calculator, _super);\r\n    function Calculator(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.calculated = false;\r\n        _this.stacks = [];\r\n        _this.calculate = _this.calculate.bind(_this);\r\n        _this.state = {\r\n            text: '',\r\n            done: false\r\n        };\r\n        return _this;\r\n    }\r\n    Calculator.prototype.getButtonSize = function (window) {\r\n        var _a = this.props, keyboardHeight = _a.keyboardHeight, hideDisplay = _a.hideDisplay;\r\n        var _b = this.props, displayHeight = _b.displayHeight, height = _b.height, width = _b.width;\r\n        if (!height) {\r\n            height = window.height - window.y;\r\n        }\r\n        if (!width) {\r\n            width = window.width - window.x;\r\n        }\r\n        width = width / 4;\r\n        var containerHeight = height;\r\n        if (keyboardHeight) {\r\n            height = keyboardHeight / 5;\r\n        }\r\n        else {\r\n            if (displayHeight || hideDisplay) {\r\n                height = (height - (displayHeight || 0)) / 5;\r\n            }\r\n            else {\r\n                height = height / 6;\r\n            }\r\n        }\r\n        if (!displayHeight) {\r\n            displayHeight = hideDisplay\r\n                ? 0\r\n                : keyboardHeight\r\n                    ? containerHeight - keyboardHeight\r\n                    : height;\r\n        }\r\n        return {\r\n            width: width,\r\n            height: height,\r\n            displayHeight: displayHeight\r\n        };\r\n    };\r\n    Calculator.prototype.componentDidMount = function () {\r\n        this.clear(this.props.value);\r\n    };\r\n    Calculator.prototype.render = function () {\r\n        var _this = this;\r\n        var style = this.props.style;\r\n        return (<react_native_1.View style={style} onLayout={function (e) {\r\n            var btnSize = _this.getButtonSize(e.nativeEvent.layout);\r\n            _this.setState({ btnSize: btnSize }, function () {\r\n                if (_this.display) {\r\n                    _this.display.tryNewSize(true);\r\n                }\r\n            });\r\n        }}>\r\n        {this.renderMain()}\r\n      </react_native_1.View>);\r\n    };\r\n    Calculator.prototype.renderMain = function () {\r\n        var _this = this;\r\n        var _a = this.state, text = _a.text, btnSize = _a.btnSize;\r\n        var _b = this.props, decimalSeparator = _b.decimalSeparator, calcButtonBackgroundColor = _b.calcButtonBackgroundColor, calcButtonColor = _b.calcButtonColor, acceptButtonBackgroundColor = _b.acceptButtonBackgroundColor, acceptButtonColor = _b.acceptButtonColor, displayBackgroundColor = _b.displayBackgroundColor, displayColor = _b.displayColor, borderColor = _b.borderColor, fontSize = _b.fontSize, width = _b.width, hasAcceptButton = _b.hasAcceptButton, hideDisplay = _b.hideDisplay, displayTextAlign = _b.displayTextAlign, noDecimal = _b.noDecimal;\r\n        var done = this.state.done && hasAcceptButton;\r\n        if (!btnSize) {\r\n            return null;\r\n        }\r\n        return (<react_native_1.View>\r\n        {!hideDisplay && (<react_native_1.View style={[\r\n            Styles.displayContainer,\r\n            {\r\n                backgroundColor: displayBackgroundColor,\r\n                borderColor: borderColor,\r\n                width: width,\r\n                height: btnSize.displayHeight\r\n            }\r\n        ]}>\r\n            <Display_1.Display height={btnSize.displayHeight} width={btnSize.width * 4 - 20} value={text} ref={function (e) {\r\n            _this.display = e;\r\n        }} style={{ color: displayColor, textAlign: displayTextAlign }}/>\r\n          </react_native_1.View>)}\r\n        <react_native_1.View style={[\r\n            Styles.row,\r\n            hideDisplay\r\n                ? { borderTopWidth: 1, borderTopColor: borderColor }\r\n                : undefined\r\n        ]}>\r\n          {this.renderActionButton(btnSize, 'C', ActionEnum.CLEAR, true)}\r\n          {this.renderActionButton(btnSize, '/', ActionEnum.DIVIDE)}\r\n          {this.renderActionButton(btnSize, '*', ActionEnum.MULTIPLY)}\r\n          {this.renderActionButton(btnSize, '❮', ActionEnum.BACK)}\r\n        </react_native_1.View>\r\n        <react_native_1.View style={Styles.row}>\r\n          {this.renderNumberButton(btnSize, '7', true)}\r\n          {this.renderNumberButton(btnSize, '8')}\r\n          {this.renderNumberButton(btnSize, '9')}\r\n          {this.renderActionButton(btnSize, '-', ActionEnum.MINUS)}\r\n        </react_native_1.View>\r\n        <react_native_1.View style={Styles.row}>\r\n          {this.renderNumberButton(btnSize, '4', true)}\r\n          {this.renderNumberButton(btnSize, '5')}\r\n          {this.renderNumberButton(btnSize, '6')}\r\n          {this.renderActionButton(btnSize, '+', ActionEnum.PLUS)}\r\n        </react_native_1.View>\r\n        <react_native_1.View style={Styles.row}>\r\n          <react_native_1.View style={{}}>\r\n            <react_native_1.View style={Styles.row}>\r\n              {this.renderNumberButton(btnSize, '1', true)}\r\n              {this.renderNumberButton(btnSize, '2')}\r\n              {this.renderNumberButton(btnSize, '3')}\r\n            </react_native_1.View>\r\n            {noDecimal ? (<react_native_1.View style={Styles.row}>\r\n                {this.renderNumberButton(btnSize, '0', true)}\r\n                {this.renderNumberButton(btnSize, '000', false, 2)}\r\n              </react_native_1.View>) : (<react_native_1.View style={Styles.row}>\r\n                {this.renderNumberButton(btnSize, '0', true)}\r\n                {this.renderNumberButton(btnSize, '000')}\r\n                {!noDecimal &&\r\n            this.renderNumberButton(btnSize, decimalSeparator)}\r\n              </react_native_1.View>)}\r\n          </react_native_1.View>\r\n          <Button_1.Button style={[\r\n            Styles.square,\r\n            {\r\n                borderColor: borderColor,\r\n                height: btnSize.height * 2,\r\n                backgroundColor: done\r\n                    ? acceptButtonBackgroundColor\r\n                    : calcButtonBackgroundColor,\r\n                width: btnSize.width\r\n            }\r\n        ]} textStyle={{\r\n            color: done ? acceptButtonColor : calcButtonColor,\r\n            fontSize: fontSize * 2\r\n        }} text={done ? '↲' : '='} onPress={this.calculate}/>\r\n        </react_native_1.View>\r\n      </react_native_1.View>);\r\n    };\r\n    Calculator.prototype.renderNumberButton = function (btnSize, value, mostLeft, scaleX) {\r\n        var _this = this;\r\n        if (mostLeft === void 0) { mostLeft = false; }\r\n        if (scaleX === void 0) { scaleX = 1; }\r\n        var _a = this.props, decimalSeparator = _a.decimalSeparator, numericButtonBackgroundColor = _a.numericButtonBackgroundColor, numericButtonColor = _a.numericButtonColor, borderColor = _a.borderColor, fontSize = _a.fontSize;\r\n        return (<Button_1.Button style={[\r\n            Styles.square,\r\n            {\r\n                borderColor: borderColor,\r\n                backgroundColor: numericButtonBackgroundColor,\r\n                borderLeftWidth: mostLeft ? 1 : 0,\r\n                width: btnSize.width * scaleX,\r\n                height: btnSize.height\r\n            }\r\n        ]} textStyle={{ color: numericButtonColor, fontSize: fontSize }} text={value} onPress={function () {\r\n            if (_this.calculated) {\r\n                // clear answer replace with entered number\r\n                _this.calculated = false;\r\n                _this.stacks = [\r\n                    {\r\n                        kind: StackKindEnum.NUMBER,\r\n                        value: '',\r\n                        text: '',\r\n                        trailing: ''\r\n                    }\r\n                ];\r\n            }\r\n            var stack = _this.stacks[_this.stacks.length - 1];\r\n            // add new stack if current tag is a sign\r\n            if (stack.kind === StackKindEnum.SIGN) {\r\n                stack = {\r\n                    kind: StackKindEnum.NUMBER,\r\n                    value: '',\r\n                    text: '',\r\n                    trailing: ''\r\n                };\r\n                _this.stacks.push(stack);\r\n            }\r\n            // evaluating decimal separator\r\n            if (value === decimalSeparator) {\r\n                if (!stack.value && !stack.text) {\r\n                    stack.text = '0';\r\n                    stack.value = '0';\r\n                }\r\n                if (stack.value.indexOf(decimalSeparator) > -1 ||\r\n                    stack.value === 'Infinity' ||\r\n                    stack.value === '-Infinity') {\r\n                    return;\r\n                }\r\n                stack.trailing = decimalSeparator;\r\n            }\r\n            else if (value === '0' || value === '000') {\r\n                if (stack.value.indexOf(decimalSeparator) > -1 ||\r\n                    stack.trailing !== '') {\r\n                    stack.trailing = stack.trailing + value;\r\n                    value = '';\r\n                }\r\n            }\r\n            else {\r\n                if (stack.trailing) {\r\n                    value = stack.trailing + value;\r\n                    stack.trailing = '';\r\n                }\r\n            }\r\n            // get editing value\r\n            var val = parseFloat((stack.value + value).replace(decimalSeparator, '.'));\r\n            // modify current stack\r\n            stack.value = val.toString();\r\n            stack.text = _this.format(val);\r\n            _this.setText();\r\n        }}/>);\r\n    };\r\n    Calculator.prototype.renderActionButton = function (btnSize, value, action, mostLeft) {\r\n        var _this = this;\r\n        if (mostLeft === void 0) { mostLeft = false; }\r\n        var _a = this.props, actionButtonBackgroundColor = _a.actionButtonBackgroundColor, actionButtonColor = _a.actionButtonColor, borderColor = _a.borderColor, fontSize = _a.fontSize;\r\n        return (<Button_1.Button style={[\r\n            Styles.square,\r\n            {\r\n                borderColor: borderColor,\r\n                backgroundColor: actionButtonBackgroundColor,\r\n                borderLeftWidth: mostLeft ? 1 : 0,\r\n                width: btnSize.width,\r\n                height: btnSize.height\r\n            }\r\n        ]} textStyle={{ color: actionButtonColor, fontSize: fontSize }} text={value} onPress={function () {\r\n            if (_this.calculated) {\r\n                // continue to use this answer\r\n                _this.calculated = false;\r\n            }\r\n            // tslint:disable-next-line:switch-default\r\n            switch (action) {\r\n                case ActionEnum.CLEAR:\r\n                    _this.clear();\r\n                    break;\r\n                case ActionEnum.PLUS:\r\n                    _this.setSign('+');\r\n                    break;\r\n                case ActionEnum.MINUS:\r\n                    _this.setSign('-');\r\n                    break;\r\n                case ActionEnum.MULTIPLY:\r\n                    _this.setSign('*');\r\n                    break;\r\n                case ActionEnum.DIVIDE:\r\n                    _this.setSign('/');\r\n                    break;\r\n                case ActionEnum.BACK:\r\n                    if (!_this.stacks.length) {\r\n                        _this.clear();\r\n                    }\r\n                    else {\r\n                        var stack = _this.stacks[_this.stacks.length - 1];\r\n                        if (stack.kind === StackKindEnum.SIGN) {\r\n                            _this.popStack();\r\n                        }\r\n                        else {\r\n                            var value_1 = stack.value, trailing = stack.trailing;\r\n                            var decimalSeparator = _this.props.decimalSeparator;\r\n                            if (!value_1 ||\r\n                                (value_1.length === 2 && value_1.startsWith('-')) ||\r\n                                value_1 === '-' ||\r\n                                value_1 === 'Infinity' ||\r\n                                value_1 === '-Infinity') {\r\n                                _this.clear();\r\n                                return;\r\n                            }\r\n                            if (value_1 === '0' && !trailing) {\r\n                                return;\r\n                            }\r\n                            if (trailing !== '') {\r\n                                stack.trailing = trailing.slice(0, trailing.length - 1);\r\n                            }\r\n                            else {\r\n                                if (value_1.length <= 1) {\r\n                                    _this.popStack();\r\n                                }\r\n                                else {\r\n                                    value_1 = value_1.slice(0, value_1.length - 1);\r\n                                    while (value_1.slice(-1) === '0') {\r\n                                        value_1 = value_1.slice(0, value_1.length - 1);\r\n                                        trailing = trailing + '0';\r\n                                    }\r\n                                    // keep decimal separator displayed\r\n                                    var sep = '';\r\n                                    if (value_1[value_1.length - 1] === '.') {\r\n                                        sep = _this.props.decimalSeparator;\r\n                                    }\r\n                                    else {\r\n                                        // skip trailing when no decimal separator found\r\n                                        value_1 += trailing;\r\n                                        trailing = '';\r\n                                    }\r\n                                    // get editing value\r\n                                    var val = parseFloat(value_1.replace(decimalSeparator, '.'));\r\n                                    stack.value = val.toString();\r\n                                    stack.text = _this.format(val);\r\n                                    stack.trailing = sep + trailing;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    _this.setText();\r\n                    break;\r\n            }\r\n        }}/>);\r\n    };\r\n    Calculator.prototype.calculate = function () {\r\n        var _this = this;\r\n        var _a = this.props, onCalc = _a.onCalc, onAccept = _a.onAccept, hasAcceptButton = _a.hasAcceptButton, _b = _a.roundTo, roundTo = _b === void 0 ? 2 : _b;\r\n        if (!this.stacks.length) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        var stack = this.stacks[this.stacks.length - 1];\r\n        if (stack.kind === StackKindEnum.SIGN) {\r\n            this.popStack();\r\n        }\r\n        else if (this.stacks.length === 1 && stack.value === '-') {\r\n            this.clear();\r\n            return;\r\n        }\r\n        // tslint:disable-next-line:no-eval\r\n        var num = eval(this.stacks.map(function (x) { return x.value; }).join('') || '0');\r\n        var value = Math.round(num * Math.pow(10, roundTo)) / Math.pow(10, roundTo);\r\n        var text = this.format(value);\r\n        this.stacks = [\r\n            {\r\n                kind: StackKindEnum.NUMBER,\r\n                value: value.toString(),\r\n                text: text,\r\n                trailing: ''\r\n            }\r\n        ];\r\n        this.setText(true, function () {\r\n            if (onCalc) {\r\n                onCalc(value, text);\r\n            }\r\n            if (hasAcceptButton && onAccept && _this.state.done) {\r\n                onAccept(value, text);\r\n            }\r\n            _this.calculated = true;\r\n        });\r\n    };\r\n    Calculator.prototype.popStack = function () {\r\n        this.stacks.pop();\r\n        if (!this.stacks.length) {\r\n            this.clear();\r\n        }\r\n    };\r\n    Calculator.prototype.clear = function (value) {\r\n        if (value === void 0) { value = 0; }\r\n        this.stacks = [\r\n            {\r\n                kind: StackKindEnum.NUMBER,\r\n                value: value.toString(),\r\n                text: this.format(value),\r\n                trailing: ''\r\n            }\r\n        ];\r\n        this.setText();\r\n    };\r\n    Calculator.prototype.setSign = function (sign) {\r\n        var stack = this.stacks[this.stacks.length - 1];\r\n        if (stack.kind === StackKindEnum.SIGN) {\r\n            // only '-' sign allowed for first input\r\n            if (this.stacks.length <= 1 && sign !== '-') {\r\n                return;\r\n            }\r\n            stack.text = sign;\r\n            stack.value = sign;\r\n        }\r\n        else {\r\n            if (!stack.value ||\r\n                stack.value === 'Infinity' ||\r\n                stack.value === '-Infinity') {\r\n                return;\r\n            }\r\n            if (sign === '-' && this.stacks.length === 1 && stack.value === '0') {\r\n                stack.kind = StackKindEnum.SIGN;\r\n                stack.text = sign;\r\n                stack.value = sign;\r\n            }\r\n            else {\r\n                this.stacks.push({\r\n                    kind: StackKindEnum.SIGN,\r\n                    text: sign,\r\n                    value: sign,\r\n                    trailing: ''\r\n                });\r\n            }\r\n        }\r\n        this.setText();\r\n    };\r\n    Calculator.prototype.setText = function (done, callback) {\r\n        var _this = this;\r\n        if (done === void 0) { done = false; }\r\n        var text = this.stacks.map(function (s) { return s.text + (s.trailing || ''); }).join(' ');\r\n        if (!done) {\r\n            done = this.stacks.length === 1;\r\n        }\r\n        this.setState({ text: text, done: done }, function () {\r\n            var onTextChange = _this.props.onTextChange;\r\n            if (onTextChange) {\r\n                onTextChange(text);\r\n            }\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n    };\r\n    Calculator.prototype.format = function (num) {\r\n        var _a = this.props, decimalSeparator = _a.decimalSeparator, thousandSeparator = _a.thousandSeparator;\r\n        return utils_1.formatNumber(num, decimalSeparator, thousandSeparator);\r\n    };\r\n    Calculator.defaultProps = interface_1.DefaultCommonProps;\r\n    return Calculator;\r\n}(React.Component));\r\nexports.Calculator = Calculator;\r\nvar Styles = react_native_1.StyleSheet.create({\r\n    displayContainer: {\r\n        borderStyle: 'solid',\r\n        borderWidth: 1,\r\n        paddingLeft: 10,\r\n        paddingRight: 10,\r\n        paddingBottom: 0,\r\n        paddingTop: 0,\r\n        margin: 0\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        alignContent: 'stretch',\r\n        flexWrap: 'wrap'\r\n    },\r\n    square: {\r\n        borderStyle: 'solid',\r\n        borderRightWidth: 1,\r\n        borderBottomWidth: 1\r\n    }\r\n});\r\n//# sourceMappingURL=Calculator.js.map"]},"metadata":{},"sourceType":"script"}