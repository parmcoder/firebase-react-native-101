{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function registration(email, password, lastName, firstName) {\n  var response;\n  return _regeneratorRuntime.async(function registration$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n            if (user) {\n              Alert.alert(\"Registered as\", user.user.uid);\n              return user.user.uid;\n            }\n\n            Alert.alert(user);\n          }));\n\n        case 3:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          Alert.alert(\"There is something wrong!!!!\", _context.t0.message);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function signIn(email, password) {\n  var response;\n  return _regeneratorRuntime.async(function signIn$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(email, password).then(function (user) {\n            if (user) {\n              Alert.alert(\"Logged in as\", user.user.uid);\n              return user.user.uid;\n            }\n\n            Alert.alert(user);\n          }));\n\n        case 3:\n          response = _context2.sent;\n          return _context2.abrupt(\"return\", response);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          Alert.alert(\"There is something wrong!\", _context2.t0.message);\n          return _context2.abrupt(\"return\", _context2.t0.code);\n\n        case 12:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n}\nexport function loggingOut() {\n  return _regeneratorRuntime.async(function loggingOut$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return _regeneratorRuntime.awrap(firebase.auth().signOut());\n\n        case 3:\n          _context3.next = 8;\n          break;\n\n        case 5:\n          _context3.prev = 5;\n          _context3.t0 = _context3[\"catch\"](0);\n          Alert.alert(\"There is something wrong!\", _context3.t0.message);\n\n        case 8:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, [[0, 5]], Promise);\n}\nexport function currentUser() {\n  try {\n    var response = firebase.auth().currentUser;\n    return response;\n  } catch (err) {\n    Alert.alert(\"There is something wrong!\", err.message);\n    return JSON.parse(err.message).error.code;\n  }\n}","map":{"version":3,"sources":["/home/parmcoder/muic/git/firebase-react-native-101/src/services/auth.js"],"names":["firebase","registration","email","password","lastName","firstName","auth","createUserWithEmailAndPassword","then","user","Alert","alert","uid","response","message","signIn","signInWithEmailAndPassword","code","loggingOut","signOut","currentUser","err","JSON","parse","error"],"mappings":";AAAA,OAAO,KAAKA,QAAZ,MAA0B,UAA1B;AACA,OAAO,oBAAP;;AAGA,OAAO,SAAeC,YAAf,CAA4BC,KAA5B,EAAmCC,QAAnC,EAA6CC,QAA7C,EAAuDC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAGoBL,QAAQ,CAACM,IAAT,GAAgBC,8BAAhB,CAA+CL,KAA/C,EAAsDC,QAAtD,EAAgEK,IAAhE,CAAqE,UAACC,IAAD,EAAU;AAEpG,gBAAIA,IAAJ,EAAU;AACRC,cAAAA,KAAK,CAACC,KAAN,CAAY,eAAZ,EAA6BF,IAAI,CAACA,IAAL,CAAUG,GAAvC;AACA,qBAAOH,IAAI,CAACA,IAAL,CAAUG,GAAjB;AACD;;AACDF,YAAAA,KAAK,CAACC,KAAN,CAAYF,IAAZ;AAED,WARsB,CAHpB;;AAAA;AAGGI,UAAAA,QAHH;AAAA,2CAYEA,QAZF;;AAAA;AAAA;AAAA;AAgBHH,UAAAA,KAAK,CAACC,KAAN,CAAY,8BAAZ,EAA4C,YAAIG,OAAhD;;AAhBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBP,OAAO,SAAeC,MAAf,CAAsBb,KAAtB,EAA6BC,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEoBH,QAAQ,CAC5BM,IADoB,GAEpBU,0BAFoB,CAEOd,KAFP,EAEcC,QAFd,EAGpBK,IAHoB,CAGf,UAACC,IAAD,EAAU;AAEd,gBAAIA,IAAJ,EAAU;AACRC,cAAAA,KAAK,CAACC,KAAN,CAAY,cAAZ,EAA4BF,IAAI,CAACA,IAAL,CAAUG,GAAtC;AACA,qBAAOH,IAAI,CAACA,IAAL,CAAUG,GAAjB;AACD;;AACDF,YAAAA,KAAK,CAACC,KAAN,CAAYF,IAAZ;AAED,WAXoB,CAFpB;;AAAA;AAEGI,UAAAA,QAFH;AAAA,4CAcIA,QAdJ;;AAAA;AAAA;AAAA;AAgBHH,UAAAA,KAAK,CAACC,KAAN,CAAY,2BAAZ,EAAyC,aAAIG,OAA7C;AAhBG,4CAiBI,aAAIG,IAjBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBP,OAAO,SAAeC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEGlB,QAAQ,CAACM,IAAT,GAAgBa,OAAhB,EAFH;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIHT,UAAAA,KAAK,CAACC,KAAN,CAAY,2BAAZ,EAAyC,aAAIG,OAA7C;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQP,OAAO,SAASM,WAAT,GAAuB;AAC5B,MAAI;AACF,QAAMP,QAAQ,GAAGb,QAAQ,CAACM,IAAT,GAAgBc,WAAjC;AACA,WAAOP,QAAP;AACD,GAHD,CAGE,OAAOQ,GAAP,EAAY;AACZX,IAAAA,KAAK,CAACC,KAAN,CAAY,2BAAZ,EAAyCU,GAAG,CAACP,OAA7C;AACA,WAAOQ,IAAI,CAACC,KAAL,CAAWF,GAAG,CAACP,OAAf,EAAwBU,KAAxB,CAA8BP,IAArC;AACD;AACF","sourcesContent":["import * as firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { Alert } from \"react-native\";\n\nexport async function registration(email, password, lastName, firstName) {\n  try {\n\n    const response = await firebase.auth().createUserWithEmailAndPassword(email, password).then((user) => {\n      // console.log(user)\n      if (user) {\n        Alert.alert(\"Registered as\", user.user.uid);\n        return user.user.uid;\n      }\n      Alert.alert(user);\n\n    });\n  return response;\n\n\n  } catch (err) {\n    Alert.alert(\"There is something wrong!!!!\", err.message);\n  }\n}\n\nexport async function signIn(email, password) {\n  try {\n    const response = await firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then((user) => {\n        // console.log(user)\n        if (user) {\n          Alert.alert(\"Logged in as\", user.user.uid);\n          return user.user.uid;\n        }\n        Alert.alert(user);\n\n      });\n    return response;\n  } catch (err) {\n    Alert.alert(\"There is something wrong!\", err.message);\n    return err.code;\n    console.log(err)\n\n  }\n}\n\nexport async function loggingOut() {\n  try {\n    await firebase.auth().signOut();\n  } catch (err) {\n    Alert.alert(\"There is something wrong!\", err.message);\n  }\n}\n\nexport function currentUser() {\n  try {\n    const response = firebase.auth().currentUser;\n    return response;\n  } catch (err) {\n    Alert.alert(\"There is something wrong!\", err.message);\n    return JSON.parse(err.message).error.code;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}