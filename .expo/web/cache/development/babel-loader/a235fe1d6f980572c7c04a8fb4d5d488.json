{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/parmcoder/muic/git/firebase-react-native-101/src/screens/LoginScreen.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { memo, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { theme } from \"../core/theme\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport { signIn } from \"../services/auth.js\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState({\n    value: '',\n    error: ''\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _onLoginPressed = function _onLoginPressed() {\n    var emailError, passwordError;\n    return _regeneratorRuntime.async(function _onLoginPressed$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emailError = emailValidator(email.value);\n            passwordError = passwordValidator(password.value);\n\n            if (!(emailError || passwordError)) {\n              _context.next = 6;\n              break;\n            }\n\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            setPassword(_objectSpread(_objectSpread({}, password), {}, {\n              error: passwordError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 6:\n            if (!(email.value && password.value)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(signIn(email.value, password.value).then(function (res) {\n              if (res === 'auth/user-not-found') {\n                Alert.alert(\"Email not found, please register.\");\n              } else {\n                navigation.navigate('Dashboard');\n              }\n            }));\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _onRegisterPressed = function _onRegisterPressed() {\n    navigation.navigate('Register');\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: 'bold',\n      color: 'hotpink',\n      fontSize: 25\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Welcome!\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    theme: {\n      colors: {\n        primary: 'red'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: password.value,\n    onChangeText: function onChangeText(text) {\n      return setPassword({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!password.error,\n    errorText: password.error,\n    secureTextEntry: true,\n    theme: {\n      colors: {\n        primary: 'red'\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    color: \"#FF69B4\",\n    onPress: _onLoginPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(Button, {\n    mode: \"contained\",\n    color: \"#FF69B4\",\n    onPress: _onRegisterPressed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, \"Register\"));\n};\n\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  label: {\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"sources":["/home/parmcoder/muic/git/firebase-react-native-101/src/screens/LoginScreen.tsx"],"names":["React","memo","useState","Background","Logo","Button","TextInput","theme","emailValidator","passwordValidator","signIn","LoginScreen","navigation","value","error","email","setEmail","password","setPassword","_onLoginPressed","emailError","passwordError","then","res","Alert","alert","navigate","_onRegisterPressed","fontWeight","color","fontSize","text","colors","primary","styles","StyleSheet","create","forgotPassword","width","alignItems","marginBottom","row","flexDirection","marginTop","label","secondary","link"],"mappings":"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","sourcesContent":["import React, { memo, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Background from '../components/Background';\nimport Logo from '../components/Logo';\nimport Header from '../components/Header';\nimport Button from '../components/Button';\nimport TextInput from '../components/TextInput';\nimport { theme } from '../core/theme';\nimport { emailValidator, passwordValidator } from '../core/utils';\nimport { Navigation } from '../types';\nimport { signIn } from '../services/auth.js';\nimport { Alert } from \"react-native\";\n\ntype Props = {\n  navigation: Navigation;\n};\n\nconst LoginScreen = ({ navigation }: Props) => {\n  const [email, setEmail] = useState({ value: '', error: '' });\n  const [password, setPassword] = useState({ value: '', error: '' });\n\n  const _onLoginPressed = async () => {\n    const emailError = emailValidator(email.value);\n    const passwordError = passwordValidator(password.value);\n\n    if (emailError || passwordError) {\n      setEmail({ ...email, error: emailError });\n      setPassword({ ...password, error: passwordError });\n      return;\n    }\n    if (email.value && password.value) {\n      await signIn(email.value, password.value).then((res) => {\n        if (res === 'auth/user-not-found') {\n          Alert.alert(\"Email not found, please register.\");\n          // console.log(\"Email not found, please register.\");\n        } else {\n          // console.log(JSON.parse(res));\n          navigation.navigate('Dashboard');\n        }\n      })\n    }\n\n\n  };\n\n  const _onRegisterPressed = () => {\n    navigation.navigate('Register')\n  };\n\n  return (\n    <Background>\n      <Logo />\n\n      <Text style={{ fontWeight: 'bold',color: 'hotpink', fontSize: 25}}>Welcome!</Text>\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        theme={{\n          colors: {\n            primary:'red',\n          }\n        }}\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: '' })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        theme={{\n          colors: {\n            primary:'red',\n          }\n        }}\n      />\n\n      <Button mode=\"contained\" color='#FF69B4' onPress={_onLoginPressed}>\n        Login\n      </Button>\n\n      <Button mode=\"contained\" color='#FF69B4' onPress={_onRegisterPressed}>\n        Register\n      </Button>\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  label: {\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n});\n\nexport default memo(LoginScreen);\n"]},"metadata":{},"sourceType":"module"}